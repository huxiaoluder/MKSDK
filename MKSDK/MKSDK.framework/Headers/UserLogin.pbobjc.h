// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserLogin.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - UserLoginUserLoginRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface UserLoginUserLoginRoot : GPBRootObject
@end

#pragma mark - UserLoginRpcRequest

typedef GPB_ENUM(UserLoginRpcRequest_FieldNumber) {
  UserLoginRpcRequest_FieldNumber_ClientId = 1,
  UserLoginRpcRequest_FieldNumber_ReqTime = 2,
  UserLoginRpcRequest_FieldNumber_SignKey = 3,
  UserLoginRpcRequest_FieldNumber_UserName = 5,
  UserLoginRpcRequest_FieldNumber_UserId = 6,
  UserLoginRpcRequest_FieldNumber_Password = 7,
  UserLoginRpcRequest_FieldNumber_Finger = 8,
  UserLoginRpcRequest_FieldNumber_LoginType = 11,
  UserLoginRpcRequest_FieldNumber_LoginDeviceid = 12,
  UserLoginRpcRequest_FieldNumber_LoginLang = 13,
  UserLoginRpcRequest_FieldNumber_LoginOs = 14,
};

/**
 * 请求方填写
 **/
@interface UserLoginRpcRequest : GPBMessage

/** true;平台申请 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

/** true;单位秒,请求时间戳，在该时间开始的15分钟内该请求有效，放置数据重放攻击. */
@property(nonatomic, readwrite) int64_t reqTime;

/** true;签名字串,计算方法： md5(req_time + client_srcret) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *signKey;

/** true; user_name / user_id 两个必须选择一个 (目前选择 user_name) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

@property(nonatomic, readwrite) uint32_t userId;

/** true;用户密码，密码或者指纹特征码必须2选1(md5) (目前选择 password) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

/** true;指纹特征码，密码或者指纹特征码必须2选1 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *finger;

/**
 * 登录附加信息
 * true;登录类别: 1 App; 2 web; 3 智能终端(一体机)
 **/
@property(nonatomic, readwrite) uint32_t loginType;

/**
 * true;用户登录使用的设备ID（如果通过一体机登录，则使用设备的deviceid，如果通过其它设备登录则去其它设备的ID）
 * ios,id; huawei,id; jpush,id
 * login_deviceid 取决于使用什么推送系统获得的ID
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *loginDeviceid;

/** true;用户使用语言 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *loginLang;

/** 1: Android Phone; 2: IOS Phone; 3: Win Phone; 11: Android Pad; 12: IOS Pad; 3: Win PC */
@property(nonatomic, readwrite) uint32_t loginOs;

@end

#pragma mark - UserLoginRpcResponse

typedef GPB_ENUM(UserLoginRpcResponse_FieldNumber) {
  UserLoginRpcResponse_FieldNumber_UserId = 1,
  UserLoginRpcResponse_FieldNumber_AccessToken = 2,
  UserLoginRpcResponse_FieldNumber_RefreshToken = 3,
  UserLoginRpcResponse_FieldNumber_ExpiredTime = 4,
};

/**
 * 返回方填写
 **/
@interface UserLoginRpcResponse : GPBMessage

/** true;用户ID */
@property(nonatomic, readwrite) uint32_t userId;

/** true;访问token，后续其它接口需要使用. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;

/** true;刷新token，在access_token到期之前可以通过该token刷新access_token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *refreshToken;

/** true;access_token 超时时间。当前时间加上该时间,是失效时间. */
@property(nonatomic, readwrite) int64_t expiredTime;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
