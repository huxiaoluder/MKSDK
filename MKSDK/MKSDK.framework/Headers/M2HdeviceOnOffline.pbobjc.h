// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: M2HDeviceOnOffline.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class M2HDeviceOnOfflineDeviceInfo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - M2HDeviceOnOfflineM2HdeviceOnOfflineRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface M2HDeviceOnOfflineM2HdeviceOnOfflineRoot : GPBRootObject
@end

#pragma mark - M2HDeviceOnOfflineDeviceInfo

typedef GPB_ENUM(M2HDeviceOnOfflineDeviceInfo_FieldNumber) {
  M2HDeviceOnOfflineDeviceInfo_FieldNumber_SubDeviceId = 1,
  M2HDeviceOnOfflineDeviceInfo_FieldNumber_OnlineStatus = 3,
};

@interface M2HDeviceOnOfflineDeviceInfo : GPBMessage

/** 设备ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subDeviceId;

/** 1 离线; 2 在线 */
@property(nonatomic, readwrite) uint32_t onlineStatus;

@end

#pragma mark - M2HDeviceOnOfflineRpcRequest

typedef GPB_ENUM(M2HDeviceOnOfflineRpcRequest_FieldNumber) {
  M2HDeviceOnOfflineRpcRequest_FieldNumber_DeviceId = 1,
  M2HDeviceOnOfflineRpcRequest_FieldNumber_DeviceSeckey = 2,
  M2HDeviceOnOfflineRpcRequest_FieldNumber_SubDeviceId = 5,
  M2HDeviceOnOfflineRpcRequest_FieldNumber_DevicesArray = 6,
};

/**
 * 请求方填写
 **/
@interface M2HDeviceOnOfflineRpcRequest : GPBMessage

/** true; access_token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceSeckey;

/** 需要查询的设备;或者为空获得所有设备. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subDeviceId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<M2HDeviceOnOfflineDeviceInfo*> *devicesArray;
/** The number of items in @c devicesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger devicesArray_Count;

@end

#pragma mark - M2HDeviceOnOfflineRpcResponse

/**
 * 返回方填写
 **/
@interface M2HDeviceOnOfflineRpcResponse : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
